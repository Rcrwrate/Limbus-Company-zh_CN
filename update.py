from Lib.Network import Network
import os

VER = {
    "version": 0.5,
    "file": {
        "update.py": 1.0,
        "translate.py": 1.0
    }
}

PATH = os.path.join("Translation", "zh-Hans", "Text",
                    "_AutoGeneratedTranslations.txt")

API = "https://rcrwrate.github.io/Limbus-Company-zh_CN/"
API_JSON = "https://rcrwrate.github.io/Limbus-Company-Work-Dataset/Substitutions.json"

s = Network({})


def load():
    with open(PATH, "r", encoding="utf-8") as fn:
        ori = fn.readlines()

    ori_dict = {}
    for i in ori:
        tmp = i.split("=")
        L = len(tmp)
        J = tmp[0:int(L/2)]
        K = tmp[int(L/2):L]
        j = ""
        k = ""
        for i in J:
            j += i
            j += "="
        for i in K:
            k += i
            k += "="
        j = j[:-1]
        k = k[:-1]
        ori_dict[j] = k
    return ori_dict


def save(fin_dict):
    with open(PATH, "w", encoding="utf-8") as fn:
        for i in fin_dict:
            fn.write(i+"="+fin_dict[i])


def change(ori_dict):
    s = Network({})
    r = s.get(API_JSON).json()
    for i in r:
        ori_dict[i] = r[i]
    return ori_dict


ver = s.get("https://rcrwrate.github.io/Limbus-Company-zh_CN/version.json").json()
if ver["version"] > VER["version"]:
    print(ver["msg"])
    if ver["force"]:
        print(ver["forcemsg"])
        input()

for i in ver["file"]:
    if ver["file"][i] > VER["file"][i]:
        with open(i, "wb") as f:
            f.write(s.get(API + i).content)


save(change(load()))

# r = s.get("https://rcrwrate.github.io/Limbus-Company-Work-Dataset/Substitutions.txt")
# with open(os.path.join("Translation", "zh-Hans", "Text",
#                        "_AutoGeneratedTranslations.txt"), "wb") as f:
#     f.write(r.content)
